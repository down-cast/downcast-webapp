@use "mixins/colors.scss" as colors;
@use "mixins/derived-colors.scss" as dColors;
@use "mixins/typescale.scss" as types;

@mixin light-theme {
  background-color: var(--color-background-light);
  --color-primary: var(--color-primary-light);
  --color-on-primary: var(--color-on-primary-light);
  --color-primary-container: var(--color-primary-container-light);
  --color-on-primary-container: var(--color-on-primary-container-light);
  --color-secondary: var(--color-secondary-light);
  --color-on-secondary: var(--color-on-secondary-light);
  --color-secondary-container: var(--color-secondary-container-light);
  --color-on-secondary-container: var(--color-on-secondary-container-light);
  --color-tertiary: var(--color-tertiary-light);
  --color-on-tertiary: var(--color-on-tertiary-light);
  --color-tertiary-container: var(--color-tertiary-container-light);
  --color-on-tertiary-container: var(--color-on-tertiary-container-light);
  --color-error: var(--color-error-light);
  --color-on-error: var(--color-on-error-light);
  --color-error-container: var(--color-error-container-light);
  --color-on-error-container: var(--color-on-error-container-light);
  --color-outline: var(--color-outline-light);
  --color-background: var(--color-background-light);
  --color-on-background: var(--color-on-background-light);
  --color-surface: var(--color-surface-light);
  --color-on-surface: var(--color-on-surface-light);
  --color-surface-variant: var(--color-surface-variant-light);
  --color-on-surface-variant: var(--color-on-surface-variant-light);
  --color-inverse-surface: var(--color-inverse-surface-light);
  --color-inverse-on-surface: var(--color-inverse-on-surface-light);
}

@mixin dark-theme {
  background-color: var(--color-background-dark);
  --color-primary: var(--color-primary-dark);
  --color-on-primary: var(--color-on-primary-dark);
  --color-primary-container: var(--color-primary-container-dark);
  --color-on-primary-container: var(--color-on-primary-container-dark);
  --color-secondary: var(--color-secondary-dark);
  --color-on-secondary: var(--color-on-secondary-dark);
  --color-secondary-container: var(--color-secondary-container-dark);
  --color-on-secondary-container: var(--color-on-secondary-container-dark);
  --color-tertiary: var(--color-tertiary-dark);
  --color-on-tertiary: var(--color-on-tertiary-dark);
  --color-tertiary-container: var(--color-tertiary-container-dark);
  --color-on-tertiary-container: var(--color-on-tertiary-container-dark);
  --color-error: var(--color-error-dark);
  --color-on-error: var(--color-on-error-dark);
  --color-error-container: var(--color-error-container-dark);
  --color-on-error-container: var(--color-on-error-container-dark);
  --color-outline: var(--color-outline-dark);
  --color-background: var(--color-background-dark);
  --color-on-background: var(--color-on-background-dark);
  --color-surface: var(--color-surface-dark);
  --color-on-surface: var(--color-on-surface-dark);
  --color-surface-variant: var(--color-surface-variant-dark);
  --color-on-surface-variant: var(--color-on-surface-variant-dark);
  --color-inverse-surface: var(--color-inverse-surface-dark);
  --color-inverse-on-surface: var(--color-inverse-on-surface-dark);
}


.material-theme {
  @include types.text-definitions;
  @include colors.main-colors;
  @include dColors.derived-colors;
}

@media (prefers-color-scheme: light) {
  .material-theme {
    @include light-theme;
    @include dColors.derived-light-theme
  }
  .dark-theme {
    @include dark-theme;
    @include dColors.derived-dark-theme;
  }
}

@media (prefers-color-scheme: dark) {
  .material-theme {
    @include dark-theme;
    @include dColors.derived-dark-theme;
  }
  .light-theme {
    @include light-theme;
    @include dColors.derived-light-theme;
  }
}
